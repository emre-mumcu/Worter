// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Wörter.AppData;

#nullable disable

namespace Wörter.AppData.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250610122417_Mig1")]
    partial class Mig1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("Wörter.AppData.Entities.Notiz", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Category")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("ReferenceLink")
                        .HasColumnType("TEXT");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("State")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Tags")
                        .HasColumnType("TEXT");

                    b.Property<string>("TextContent")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Notizen");
                });

            modelBuilder.Entity("Wörter.AppData.Entities.Wort", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Art")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Aussprache")
                        .HasColumnType("TEXT");

                    b.Property<string>("Beispiel")
                        .HasColumnType("TEXT");

                    b.Property<string>("Category")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("DE")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("EN")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Erläuterung")
                        .HasColumnType("TEXT");

                    b.Property<string>("Gegenteil")
                        .HasColumnType("TEXT");

                    b.Property<string>("Geschlecht")
                        .HasColumnType("TEXT");

                    b.Property<string>("Plural")
                        .HasColumnType("TEXT");

                    b.Property<int>("State")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Synonym")
                        .HasColumnType("TEXT");

                    b.Property<string>("TR")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Tags")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("TEXT");

                    b.Property<string>("Verbkonjugation")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DE", "Art")
                        .IsUnique();

                    b.ToTable("Wörter");
                });
#pragma warning restore 612, 618
        }
    }
}
