@model List<SpielVM>

<partial name="_Menu" />

<h1 class="my-4">My Word Game</h1>

<form id="quizForm">

	<div id="quizCarousel" class="carousel slide" data-bs-interval="false">

		<div class="carousel-inner">

			@for(int i=0; i<Model.Count; i++)
			{
				var q = Model[i];

				<div class="carousel-item @(i == 0 ? "active":"")">
					<div class="card p-4">
						<h5 class="text-info text-opacity-50 mb-4">Frage @(i + 1). Was bedeutet das Folgende?</h5>
						<h2 class="frg" grp=@($"q{i + 1}")>@q.Frage <small class="fs-6 text-warning">@q.Aussprache</small> </h2>
						@for(int a=0; a<q.Optionen.Count; a++)
						{
							var answer = q.Optionen[a];
							bool isCorrect = answer == q.Antwort;
							string val = isCorrect ? "correct" :"wrong";
							string cls = isCorrect ? "text-primary": "text-danger";

							<div class="form-check" style="margin-left: 25px;">
								
								<label class="form-check-label" for=@($"q{i + 1}a{a + 1}")>
									<input class="form-check-input" type="radio" name=@($"q{i + 1}") value="@val"
									id=@($"q{i + 1}a{a + 1}")>
									@answer</label>
							</div>
						}
					</div>
				</div>
			}
		</div>

		<div class="d-flex justify-content-between mt-3">
			<button class="btn btn-secondary" type="button" id="prevBtn">Previous</button>
			<button class="btn btn-primary" type="button" id="nextBtn">Next</button>
			<button class="btn btn-success d-none" type="submit" id="finishBtn">Finish</button>
		</div>
	</div>
</form>

<div id="result" class="my-4 d-none">
	<h4>Result</h4>
	<p id="scoreText"></p>
	<hr>
	<div id="resultsummary"></div>
</div>

@section Scripts {
	<script>
		const carousel = new bootstrap.Carousel(document.querySelector('#quizCarousel'), {
			interval: false,
			wrap: false
		});

		const totalSlides = document.querySelectorAll('.carousel-item').length;
		let currentSlide = 0;

		const prevBtn = document.getElementById('prevBtn');
		const nextBtn = document.getElementById('nextBtn');
		const finishBtn = document.getElementById('finishBtn');

		function updateButtons() {
			prevBtn.disabled = currentSlide === 0;
			nextBtn.classList.toggle('d-none', currentSlide === totalSlides - 1);
			finishBtn.classList.toggle('d-none', currentSlide !== totalSlides - 1);
		}

		prevBtn.addEventListener('click', () => {
			if (currentSlide > 0) {
				currentSlide--;
				carousel.to(currentSlide);
				updateButtons();
			}
		});

		nextBtn.addEventListener('click', () => {
			if (currentSlide < totalSlides - 1) {
				currentSlide++;
				carousel.to(currentSlide);
				updateButtons();
			}
		});

		document.getElementById('quizForm').addEventListener('submit', function (e) {
			e.preventDefault();
			let score = 0;

			const answers = {
				@for (int i=0; i<Model.Count; i++)
				{
					<text>"@($"q{i + 1}")": "correct",</text>
				}
			};

			for (let key in answers) {
				const selected = document.querySelector(`input[name="${key}"]:checked`);
				if (selected && selected.value === answers[key]) {
					score++;
				}
			}

			document.getElementById('scoreText').textContent = `You scored ${score} out of ${totalSlides}`;
			document.getElementById('result').classList.remove('d-none');

			updateUI();
			PrintSummary();
		});

		updateButtons();

		

		function updateUI()
		{
			document.querySelectorAll('input[type="radio"]').forEach(radio => {

				// const groupName = radio.name;
				// const radios = document.querySelectorAll(`input[name="${groupName}"]`);
				const label = radio.closest('label'); // assumes <label> wraps the input

				if (radio.value == "correct") {
					label.classList.add('text-success');
				} else {
					label.classList.add('text-danger');
				} 				
			});			
		}

		function PrintSummary()
		{
			const targetDiv = document.getElementById('resultsummary');

			targetDiv.innerHTML = "";

			var questions = document.querySelectorAll('h2.frg');

			questions.forEach(h => {				

				const grp = h.getAttribute('grp');

				targetDiv.innerHTML += "<b>" + grp + ". " + h.textContent + "</b><br/>";

				const radios = document.querySelectorAll(`input[name="${grp}"]`);

				radios.forEach(radio => {
					const label = radio.closest('label'); // assumes <label> wraps the input

					let ek = radio.checked ? " (CHECKED)" : "";

					if (radio.value == "correct") {
						targetDiv.innerHTML += "+" + label.textContent + ek + "<br/>";
					} else {
						targetDiv.innerHTML += "-" + label.textContent + ek + "<br/>";
					}
				});

			});
		}
	</script>
}