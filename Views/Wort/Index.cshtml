@model WortVM

<partial name="_Menu" />

<form method="post" action="/Save" class="col-sm-8 offset-sm-2">

	<h1 class="my-4">@(Model.Id > 0 ? "Update" : "Insert")</h1>
	<hr>
	<input asp-for="Id" type="hidden" />

	<div class="row">

		<div class="col-sm-12 offset-sm-0">

			<div class="row my-2">
				<a href="javascript:void(0);" onclick="lookup();" class="col-sm-2 col-form-label">DE</a>
				<div class="col-sm-10">
					<input asp-for="DE" autofocus class="form-control @(Model.Id > 0 ? "form-cotrol-readonly" : null)"
						readonly=@(Model.Id > 0 ? "readonly" : null)>
				</div>
				<span asp-validation-for="DE" class="text-danger"></span>
			</div>

			<div class="row my-2">
				<label asp-for="Art" class="col-sm-2 col-form-label"></label>
				<div class="col-sm-2">
					<select asp-for="Art" asp-items="Model.TypeOptions" class="form-control"
						onchange="onTypeChanged(this.value)">
						<option value="-1">Select</option>
					</select>
				</div>
				<label asp-for="Geschlecht" class="col-sm-2 col-form-label noun">Gesch.</label>
				<div class="col-sm-2">
					<select asp-for="Geschlecht" asp-items="Model.GenderOptions" class="form-control noun">
						<option value="-1">Select</option>
					</select>
				</div>

				<label asp-for="Plural" class="col-sm-1 col-form-label noun">Pl.</label>

				<div class="col-sm-3">
					<input asp-for="Plural" class="form-control noun">
				</div>
			</div>

			<div class="row my-2">
				<label asp-for="EN" class="col-sm-2 col-form-label"></label>
				<div class="col-sm-10">
					<textarea asp-for="EN" class="form-control"></textarea>
					<span asp-validation-for="EN" class="text-danger"></span>
				</div>
			</div>

			<div class="row my-2">
				<label asp-for="TR" class="col-sm-2 col-form-label"></label>
				<div class="col-sm-10">
					<textarea asp-for="TR" class="form-control"></textarea>
					<span asp-validation-for="TR" class="text-danger"></span>
				</div>
			</div>

			<div class="row my-2">
				<label asp-for="Aussprache" class="col-sm-2 col-form-label"></label>
				<div class="col-sm-10">
					<input asp-for="Aussprache" class="form-control">
				</div>
			</div>

			<div class="row my-2">
				<div class="col-sm-10 offset-sm-2">
					<button type="submit" class="btn btn-@(Model.Id > 0 ? "warning" : "success")">@(Model.Id > 0 ?
												"Update" : "Insert")
					</button>
				</div>
			</div>

			<div class="p-3 mb-4 bg-light rounded-3">

				<div class="row my-2 verb">
					<div class="col-sm-12 ">
						<label asp-for="Verbkonjugation" class="col-sm-2 col-form-label"></label>
						<textarea rows="6" asp-for="Verbkonjugation" class="form-control"></textarea>
					</div>
				</div>

				<div class="row my-2">
					<div class="col-sm-6"><label asp-for="Beispiel" class="col-sm-2 col-form-label"></label>
						<textarea rows="5" asp-for="Beispiel" class="form-control"></textarea>
					</div>

					<div class="col-sm-6"><label asp-for="Erläuterung" class="col-sm-2 col-form-label"></label>
						<textarea rows="5" asp-for="Erläuterung" class="form-control"></textarea>
					</div>
				</div>

				<div class="row my-2">
					<div class="col-sm-6"><label asp-for="Synonym" class="col-sm-2 col-form-label"></label>
						<input asp-for="Synonym" class="form-control">
					</div>

					<div class="col-sm-6"><label asp-for="Gegenteil" class="col-sm-2 col-form-label"></label>
						<input asp-for="Gegenteil" class="form-control">
					</div>
				</div>

				<div class="row my-2">
					<div class="col-sm-12">
						<button type="submit" class="btn btn-@(Model.Id > 0 ? "warning" : "success")">@(Model.Id > 0 ?
														"Update" : "Insert")
						</button>
					</div>
				</div>

			</div>

		</div>

	</div>

	@* <input asp-for="DE" class="form-control" disabled=@(Model.Id > 0 ? "disabled" : null)> *@

	@Html.AntiForgeryToken()
</form>


@section Scripts {
@* 	<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
	<script src="https://cdn.jsdelivr.net/npm/jquery-validation@1.19.5/dist/jquery.validate.min.js"></script>
	<script
		src="https://cdn.jsdelivr.net/npm/jquery-validation-unobtrusive@3.2.12/dist/jquery.validate.unobtrusive.min.js"></script> *@

	<script src="@Url.Content("~/js/customValidator.js")"></script>

	<script>

		window.addEventListener('beforeunload', function () {
			console.log("Sayfa yeniden yükleniyor veya terk ediliyor.");
		});

		@* const onReady = (callback) => {
			if (document.readyState !== 'loading') {
				callback();
			} else {
				document.addEventListener('DOMContentLoaded', callback);
			}
		};

		onReady(() => {
			console.log("Ready with arrow function");
			document.querySelector('#btn')?.addEventListener('click', () => {
				alert('Clicked!');
			});
		}); *@

			@* document.addEventListener("DOMContentLoaded", function () {
			// Your code here
		});

		document.addEventListener("DOMContentLoaded", () => {
			console.log("DOM is ready!");
		}); *@

			@* // IIFE (Immediately Invoked Function Expression)
		(function () {
			// Code inside this function runs immediately
		})();

		(() => {
			// Code here runs immediately
		})();

		(function () {
			document.addEventListener("DOMContentLoaded", () => {
				// Code here runs when DOM is ready
			});
		})(); *@


			document.addEventListener('DOMContentLoaded', function () {
				// var elements = document.querySelectorAll('.noun, .verb');
				// elements.forEach(function (element) { element.style.display = "none"; });
				//onTypeChanged();

				const selectElement = document.querySelector('select#Art'); // or getElementById('yourSelectId')
				const selectedText = selectElement.options[selectElement.selectedIndex].text;
				onTypeChanged(selectedText);
			});

		function onTypeChanged(val) {

			if (typeof val === 'undefined') {
				return;
			}

			var elements = document.querySelectorAll('.noun, .verb');

			var nounElements = document.querySelectorAll('.noun');
			var verbElements = document.querySelectorAll('.verb');

			if (val == 'Substantiv') {
				nounElements.forEach(function (element) { element.style.display = ""; });
				verbElements.forEach(function (element) { element.style.display = "none"; });
			}
			else if (val == 'Verb') {
				nounElements.forEach(function (element) { element.style.display = "none"; });
				verbElements.forEach(function (element) { element.style.display = ""; });
			}
			else {
				elements.forEach(function (element) { element.style.display = "none"; });
			}
		}

		function lookup() {

			const token = document.querySelector('input[name="__RequestVerificationToken"]').value;

			const requestData = {
				word: document.querySelector('input[name="DE"]').value
			};

			fetch('/Lookup', {
				method: "POST",
				headers: { "Content-Type": "application/json", "RequestVerificationToken": token },
				body: JSON.stringify(requestData)
			})
				.then(response => {
					if (!response.ok) { throw new Error("Network response was not ok"); }
					return response.json();
				})
				.then(data => {
					if(data.exception)
					{
						alert(data.exception);
					}
					if (data.message) {
						alert(data.message);
					}
					if (data.found) {
						window.location.replace(data.link);
					}
				})
				.catch(error => {
					console.error("Error:", error);
				});
		}

		$(function () {
			
			var token = $('input[name="__RequestVerificationToken"]').val();

			$("#DE").autocomplete({
				source: function (request, response) {
					$.ajax({
						@* url: '@Url.Action("SearchItems", "WortController")', *@
						url: "/Autocomplete",
						type: "POST",
						headers: {
							'RequestVerificationToken': token
						},
						data: { term: request.term },
						success: function (data) {
							response(data);
						}
					});
				},
				minLength: 1, // Minimum characters before search triggers
 				position: { 
					my: "left top",    // position of the menu
					at: "left+120 bottom" // position relative to the input field
				},
				open: function () {
					//$(".ui-autocomplete").css("width", "300px");
				},  
			});
		});

	</script>

	<style>
		.ui-autocomplete {
			width: 300px !important; /* or any width you prefer */
			
			/* z-index: 10000;  optional, to keep it on top */
		}
	</style>
}

@* 
	If you want to automatically include the token in every AJAX request:

	$(function () {
		var token = $('input[name="__RequestVerificationToken"]').val();

		$.ajaxSetup({
			headers: {
				'RequestVerificationToken': token
			}
		});
	});

*@